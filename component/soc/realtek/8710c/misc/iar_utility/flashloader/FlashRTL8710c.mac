WDTReset()
{
	__var tmr;
	__var reg0;
	__var reg1;

	//read cut version
	reg0 = __readMemory32(0x400001F0, "Memory");
	reg0 = (reg0 >> 4) & 0xF;
	//read idau setting
	reg1 = __readMemory32(0x50004140, "Memory");
	reg1 = reg1 & 0xF;
	//not acut version, then will use wdt reset to reset peripherals and cpu will park at ram start
	if (reg0 != 0x0) {
		__writeMemory32(0, 0x10000480, "Memory"); //disable fast boot
		//use boot reason code JTAG_RESET to halt cpu at ram start
		reg0 = __readMemory32(0x400000F4, "Memory");
		reg0 |= (0x1<<2);
		__writeMemory32(reg0, 0x400000F4, "Memory");
		__message "WDT Reset....";
		tmr = (1<<30)|(1<<25)|(0xA5<<16)|(1<<0); // 0x42A50001
		__writeMemory32(tmr, 0x40002800, "Memory");
		__delay(2000);
        __hwReset(0);
		reg0 = reg0 & (~(0x1<<2));
		__writeMemory32(reg0, 0x400000F4, "Memory");
		reg0 = __readMemory32(0x400000F4, "Memory");
		__message "reset reason: ", reg0:%x, "\n";
	}
}

disableIDcache()
{
	__var t2;
	
	// disable dcache
	t2 = 0;
	__message "SCB CSSELR = 0\n";
	__writeMemory32(t2, 0xE000ED84, "Memory");
	
	t2 = __readMemory32(0xE000ED14, "Memory");
	__message "SCB CCR :", t2:%x, "\n";
	

	t2 &= (~(3<<16));
	__message "SCB CCR DCache bit  17, 16 = 0:", t2:%x, "\n";
	__writeMemory32(t2, 0xE000ED14, "Memory");	
}

// Called by debugger before loading flash loader in RAM.
execUserFlashInit()  
{
	__var t2;
	__message "execUserFlashInit1....";
	WDTReset();
	__message "execUserFlashInit2....";
	if(__driverType("ijet")){
		__delay(5);
		__hwJetResetWithStrategy(1, 4);
	}else if(__driverType("cmsisdap")){
		//__hwReset(0);
		//__hwJetResetWithStrategy(1, 2);
		//__hwResetWithStrategy(0, 2);
	}else if(__driverType("jlink")){
		__hwResetWithStrategy(0, 3);
	}
}

// Called once after the flash loader is downloaded to RAM, but before execution of the flash loader. 
execUserFlashReset()
{
	__var tmr;
	__message "execUserFlashReset....";
	__writeMemory32(0, 0x10000480, "Memory"); //disable fast boot
	tmr = (1<<30)|(1<<25)|(0x0<<16)|(1<<0); // 0x42A50001
	__writeMemory32(tmr, 0x40002800, "Memory");
}

// Called once when the flash programming ends.
execUserFlashExit()  
{
	__var t2, tmr;
	__message "execUserFlashExit....";
	t2 = (int)&gRamStartFun;
	__writeMemory32(0, t2, "Memory"); //disable fast boot
	// Uncomment below two lines, device will reboot after flash download finishes
	//tmr = (1<<30)|(1<<25)|(0xA5<<16)|(1<<0); // 0x42A50001
	//__writeMemory32(tmr, 0x40002800, "Memory");
}